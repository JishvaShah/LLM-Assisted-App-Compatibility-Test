{"ast":null,"code":"var _jsxFileName = \"/Users/chenyian261/Documents/GitHub/CS6510Project/src/ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ImageUpload() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const fileInputRef = useRef(null);\n  const [output, setOutput] = useState('');\n  const handleFileChange = event => {\n    const files = event.target.files;\n    if (files.length > 0) {\n      const validFiles = Array.from(files).filter(file => file.type.startsWith('image/'));\n      setSelectedFiles(validFiles);\n    } else {\n      setSelectedFiles([]);\n    }\n  };\n  const handleSubmit = () => {\n    if (selectedFiles.length === 0) {\n      alert(\"Please select at least one image\");\n      return;\n    }\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  const handleConfirmUpload = () => {\n    // Prepare form data\n    const formData = new FormData();\n    selectedFiles.forEach(file => {\n      formData.append('images', file, file.name);\n    });\n\n    // Make API call\n    fetch('http://localhost:8000/api/process-image/', {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(data => {\n      // Handle the response\n      setOutput(JSON.stringify(data, null, 2));\n      setShowModal(false);\n      setSelectedFiles([]);\n      alert(\"Images uploaded successfully\");\n      fileInputRef.current.value = null;\n    }).catch(error => {\n      console.error('Error:', error);\n      alert(\"An error occurred while uploading images\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: fileInputRef,\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleFileChange,\n        multiple: true,\n        className: \"mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger ml-2\",\n          onClick: () => setSelectedFiles([]),\n          children: \"Clear Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary ml-2\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal d-block\",\n      role: \"dialog\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-dialog-centered\",\n        role: \"document\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: \"Selected Images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: selectedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: URL.createObjectURL(file),\n              alt: `Selected Image ${index}`,\n              className: \"img-fluid\",\n              style: {\n                width: '100%',\n                height: '100%'\n              }\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              onClick: handleCloseModal,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: handleConfirmUpload,\n              children: \"Confirm Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageUpload, \"6gPAfPr+Yo0cSCjkEWTqq+yUa2U=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageUpload","_s","selectedFiles","setSelectedFiles","showModal","setShowModal","fileInputRef","output","setOutput","handleFileChange","event","files","target","length","validFiles","Array","from","filter","file","type","startsWith","handleSubmit","alert","handleCloseModal","handleConfirmUpload","formData","FormData","forEach","append","name","fetch","method","body","then","response","json","data","JSON","stringify","current","value","catch","error","console","className","children","ref","accept","onChange","multiple","fileName","_jsxFileName","lineNumber","columnNumber","onClick","role","map","index","src","URL","createObjectURL","alt","style","width","height","_c","$RefreshReg$"],"sources":["/Users/chenyian261/Documents/GitHub/CS6510Project/src/ImageUpload.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\nfunction ImageUpload() {\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const fileInputRef = useRef(null);\n  const [output, setOutput] = useState('');\n\n  const handleFileChange = (event) => {\n    const files = event.target.files;\n    if (files.length > 0) {\n      const validFiles = Array.from(files).filter(file => file.type.startsWith('image/'));\n      setSelectedFiles(validFiles);\n    } else {\n      setSelectedFiles([]);\n    }\n  };\n\n  const handleSubmit = () => {\n    if (selectedFiles.length === 0) {\n      alert(\"Please select at least one image\");\n      return;\n    }\n\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const handleConfirmUpload = () => {\n      // Prepare form data\n      const formData = new FormData();\n      selectedFiles.forEach(file => {\n        formData.append('images', file, file.name);\n      });\n\n      // Make API call\n      fetch('http://localhost:8000/api/process-image/', {\n        method: 'POST',\n        body: formData\n      })\n      .then(response => response.json())\n      .then(data => {\n        // Handle the response\n        setOutput(JSON.stringify(data, null, 2));\n        setShowModal(false);\n        setSelectedFiles([]);\n        alert(\"Images uploaded successfully\");\n        fileInputRef.current.value = null;\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        alert(\"An error occurred while uploading images\");\n      });\n    };\n\n  return (\n    <div className=\"container\">\n      <div>\n        <input ref={fileInputRef} type=\"file\" accept=\"image/*\" onChange={handleFileChange} multiple className=\"mb-2\" />\n        {selectedFiles.length > 0 && (\n          <>\n            <button className=\"btn btn-danger ml-2\" onClick={() => setSelectedFiles([])}>Clear Selection</button>\n            <button className=\"btn btn-primary ml-2\" onClick={handleSubmit}>Submit</button>\n          </>\n        )}\n      </div>\n\n      {showModal && (\n        <div className=\"modal d-block\" role=\"dialog\">\n          <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Selected Images</h5>\n              </div>\n              <div className=\"modal-body\">\n                {selectedFiles.map((file, index) => (\n                  <img key={index} src={URL.createObjectURL(file)} alt={`Selected Image ${index}`} className=\"img-fluid\" style={{ width: '100%', height: '100%' }} />\n                ))}\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={handleCloseModal}>Close</button>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={handleConfirmUpload}>Confirm Upload</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n    </div>\n  );\n}\n\n\n\nexport default ImageUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}